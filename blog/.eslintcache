[{"D:\\React\\graduation_project\\blog\\src\\main\\Blog.js":"1"},{"size":4693,"mtime":1612996680892,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ioudsl","D:\\React\\graduation_project\\blog\\src\\main\\Blog.js",["6"],{"ruleId":"7","severity":1,"message":"8","line":98,"column":13,"nodeType":"9","endLine":101,"endColumn":4},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]