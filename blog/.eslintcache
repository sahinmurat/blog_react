[{"D:\\React\\graduation_project\\blog\\src\\Categories\\Culture.js":"1","D:\\React\\graduation_project\\blog\\src\\Card\\Detail.js":"2"},{"size":856,"mtime":1612046531472,"results":"3","hashOfConfig":"4"},{"size":947,"mtime":1612046963217,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ioudsl",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\graduation_project\\blog\\src\\Categories\\Culture.js",["10","11","12","13","14"],"D:\\React\\graduation_project\\blog\\src\\Card\\Detail.js",["15","16","17"],{"ruleId":"18","severity":1,"message":"19","line":7,"column":12,"nodeType":"20","messageId":"21","endLine":7,"endColumn":19},{"ruleId":"18","severity":1,"message":"22","line":7,"column":21,"nodeType":"20","messageId":"21","endLine":7,"endColumn":24},{"ruleId":"23","severity":1,"message":"24","line":10,"column":16,"nodeType":"25","endLine":19,"endColumn":6},{"ruleId":"18","severity":1,"message":"26","line":12,"column":19,"nodeType":"20","messageId":"21","endLine":12,"endColumn":27},{"ruleId":"27","severity":1,"message":"28","line":22,"column":51,"nodeType":"29","messageId":"30","endLine":22,"endColumn":53},{"ruleId":"23","severity":1,"message":"24","line":11,"column":16,"nodeType":"25","endLine":20,"endColumn":2},{"ruleId":"23","severity":1,"message":"31","line":20,"column":4,"nodeType":"32","endLine":20,"endColumn":6,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":26,"column":13,"nodeType":"36","endLine":26,"endColumn":54},"no-unused-vars","'culture' is assigned a value but never used.","Identifier","unusedVar","'set' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'response' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["37"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"38","fix":"39"},"Update the dependencies array to be: [slug]",{"range":"40","text":"41"},[651,653],"[slug]"]